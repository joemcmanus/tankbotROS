#!/usr/bin/env python
# File    : driver  - a python script to drive a tank using a RaspberryP{i motor controller
# Author  : Joe McManus joe.mcmanus@canonical.com
# Version : 0.1  04/25/2020 Joe McManus
# Copyright (C) 2020 Joe McManus
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import rospy
from std_msgs.msg import String
import Robot
import time 


leftTrim = 0
rightTrim = 0
distance = 0

robot = Robot.Robot(left_trim=leftTrim, right_trim=rightTrim)


def forward():
    print("Forward")
    robot.forward(50, 1.00)

def back():
    print("Back")
    robot.backward(50, 1.00)

def left():
    print("Left")
    robot.left(50, 1.00)

def right():
    print("Right")
    robot.right(50, 1.00)

def stop():
    print("Stop")
    robot.stop()

def getReading(data): 
    global distance
    distance=int(float(data.data))

def readDistance():
    rospy.Subscriber("ping", String, getReading) 
    return(distance)



# Message handler
def CommandCallback(commandMessage):
    command = commandMessage.data
    print(command)
    #drive the tank while reading the Parallax Ping sensor using a ros topic
    for i in range(5): 
        if command != "Back" and command != "Stop":
            if readDistance() < 15:
                stop()
                break
        if command == 'Forward':
            print('Moving forwards')
            forward()
        elif command == 'Back':
            print('Moving backwards')
            back()
        elif command == 'Left':
            print('Turning left')
            left()
        elif command == 'Right':
            print('Turning right')
            right()
        elif command == 'Stop':
            print('Stopping')
            stop()
        else:
           print('Unknown command, stopping instead')
           stop()

rospy.init_node('driver')

rospy.Subscriber('command', String, CommandCallback)

rospy.spin()
print('Shutting down: stopping motors')
stop()
